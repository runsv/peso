#!/usr/local/bin/perl -w
# -*- perl -*-

##
## extracts s6-rc service dirs into a Lua scripts
##

use strict ;

## process a given service dir
sub scan_svdir {
  my ( $dir, $pfx ) = @_ ;
  my $f = "${dir}.lua" ;

  return unless $dir && -d $dir && -x $dir && -r $dir ;
  if ( $pfx && -d $pfx && -x $pfx && -w $pfx ) { $f = "$pfx/$f" ; }
  open( L, ">", $f ) or die "Can't open $f for writing: $!" ;
  ## open the Lua script corresponding to the given service dir for writing
  print L "#!/usr/bin/lua\n-- -*- lua -*-\n\n" ;
  print L "local M = {\n\n  [ \"name\" ] = \"$dir\" ;\n\n" ;

  ## try to open, read and process the given service dir now
  if ( opendir( D, $dir ) ) {
    my ( $e, $p ) ;
    ## process the service dir's content now
    while ( readdir D ) {
      ## dir entry's (absolute or relative) path
      $e = "${dir}/$_" ;
      if ( "." eq $_ or ".." eq $_ ) { next ; }
      elsif ( -d $e ) {
        ## dir entry is a (data or env) dir, process its content
        print L "  [ \"$_\" ] = {\n" ;
        if ( opendir( D2, $e ) ) {
          while ( readdir D2 ) {
            $p = "$e/$_" ;
            if ( "." eq $_ or ".." eq $_ ) { next ; }
            elsif ( -d $p ) {
              ## subdir entry is a dir itself, just list its content
              print L "    [ \"$_\" ] = {\n" ;
              if ( opendir( D3, $p ) ) {
                while ( readdir D3 ) {
                  print L "      \"$_\" ,\n" if "." ne $_ && ".." ne $_ ;
                }
                closedir D3 ;
              }
              print L "    } ,\n" ;
            } elsif ( -f $p ) {
              ## subdir entry is a regular file, try to read it
              print L "    [ \"$_\" ] = [=====[\n" ;
              if ( open( F, "<", $p ) ) {
                print L "    $_\n" while <F> ;
                close F ;
              }
              print L "    ]=====] ,\n" ;
            }
          }
          closedir D2 ;
        }
        print L "  } ;\n\n" ;
      } elsif ( -f $e ) {
        ## dir entry is a regular file, try to read its content
        print L "  [ \"$_\" ] = [====[\n" ;
        if ( open( F, "<", $e ) ) {
          print L "    $_\n" while <F> ;
          close F ;
        }
        print L "  ]====] ;\n\n" ;
      }
    }
    ## reading done, close the given service dir
    closedir D ;
  }

  ## processing done
  print L "}\n\nreturn M\n\n" ;
  ## close the Lua script corresponding to the service dir
  close L ;
}

##
## main:
##

if ( 0 < @ARGV ) {
  my $dir = $ARGV[ 0 ] ;
  my $pfx = $ARGV[ 1 ] ;
  umask 00022 ;

  if ( ! $dir or ! -d $dir ) {
    print STDERR "\n$0:\t\"$dir\": no such directory\n$0:\tAborting ...\n\n" ;
    exit 100 ;
  } elsif ( $pfx && ! -d $pfx ) {
    mkdir( $pfx, 00755 ) or die "mkdir $pfx failed: $!" ;
    exit 100 ;
  }

  if ( opendir( DH, $dir ) ) {
    my $p ;
    while ( readdir DH ) {
      if ( "." eq $_ or ".." eq $_ ) { next ; }
      $p = "$dir/$_" ;
      scansvdir( $p, $pfx ) if -d $p ;
    }
    closedir DH ;
    exit 0 ;
  } else {
    die "opendir $dir failed: $!" ;
    exit 111 ;
  }
}

print STDERR "\nusage:\t$0 dir [resdir]\n\n" ;
exit 100 ;

