#!/bin/mksh
# -*- shell -*-

## secure process environment
## (shell settings, default permissions, process limits, signals)
set +auf
umask 022
ulimit -Sc 0
## ignore keyboard interrupts
#trap : SIGINT SIGQUIT
trap : 2 3

## set up default values for variables
PNAME=${0:-rc}
## where additional service subroutine/function definitions are stored
#SUBR=/etc/rc.d/rc.subr
BOOTLOG=/run/bootlog
#PATH=/bin:/sbin:/usr/bin:/usr/sbin
PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin
PATH=${PATH}:/busybox:/usr/busybox:/toybox:/usr/toybox
export PATH
bb=/sbin/busybox
sh=/bin/mksh
#sh=/bin/dash
test -f "$sh" -a -x "$sh" && export SHELL=$sh
#test -t 0 -o -t 1 -o -t 2 && export TERM=linux
cd /

$bb mkdir -pm 0755 /run/lock /run/sv /run/log /run/Log /run/monit /run/utmps \
  /run/sv/perp /run/sv/six /run/sv/encore /run/sv/runit \
  /run/log/perp /run/log/six /run/log/encore /run/log/runit \
  /var/log/sv/six /var/log/sv/encore /var/log/sv/perp /var/log/sv/perpd
#$bb cp /etc/monitrc /run/monit
d=/var/sv
#test -d "$d" && $bb cp -rL $d/runit $d/perp $d/encore $d/six /run/sv
test -d "$d" && $bb cp -rL "$d"/???* /run/sv

#if test -d /etc/runit/sh ; then
#  for i in /etc/runit/sh/S?*
#  do
#    test -f "$i" -a -r "$i" -a -s "$i" && . "$i" start
#  done
#fi

##
## main
##

## decide what to do based on the script's first argument
case "${1:-}" in
  start | boot )
    start
    exit 0
    ;;
  stop | *down* )
    stop
    exit 0
    ;;
  ?* )
    echo "${0}: unknown option $1"
    echo "usage: $0 start|stop"
    #exit 100
    ;;
esac

## we were just sourced to load function definitions in the case of no args
return 0

